# 1. Напишите программу, которая принимает матрицу (вложенный список) от пользователя и находит сумму всех элементов в
# матрице. Используйте вложенные списки и циклы для обхода элементов матрицы.
# Пример матрицы: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
# Пример вывода:
# Сумма элементов в матрице: 45
#
# def input_numbers():
#     matrix = []         # matrix для хранения матрицы
#     for _ in range(3):  # Запрашиваем 3 строки по 3 числа
#         numbers = input("Введите три цифры, разделенные пробелами: ")  # Попросите ввести числа
#         row = list(map(int, numbers.split()))  # Преобразуем введенную строку в список чисел
#         matrix.append(row)
#     return matrix
#
# def calculate_sum(matrix):  # Функция для вычисления суммы
#     matrix_sum = 0
#     for row in matrix:
#         for number in row:
#             matrix_sum += number    # Накопление суммы
#     return matrix_sum
#
# numbers_list = input_numbers()
#
# result = calculate_sum(numbers_list)
#
# print("Сумма элементов в матрице:", result)  # Вывод суммы
#
# 2. Напишите программу, которая принимает список чисел от пользователя и сортирует его в порядке убывания, используя
# метод sort() и параметр reverse=True. Выведите отсортированный список на экран.
# Пример вывода:
# Введите список чисел, разделенных пробелами: 5 2 8 1 3
# Отсортированный список чисел: [8, 5, 3, 2, 1]

# numbers = input("Введите числа через пробел: ").split()  # разделяем строку на список
# numbers.sort()  # сортируем список
# numbers.reverse()  # разворачиваем список
# # reverse = True  # переменная, которая не используется в данном коде
# print(numbers)  # выводим список

numbers = input("Введите числа через пробел: ").split()  # разделяем строку на список
numbers = [int(num) for num in numbers]  # преобразуем строки в числа
numbers.sort(reverse=True)  # сортируем список в порядке убывания
print(numbers)  # выводим список
