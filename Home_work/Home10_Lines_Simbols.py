# 1. Напишите программу, которая запрашивает у пользователя строку и преобразует ее,
# удаляя все гласные буквы из строки. Используйте метод replace() для замены гласных букв
# на пустую строку. Выведите преобразованную строку на экран с помощью команды print.
# Пример вывода:
# Введите строку: Hello, world!
# Результат: Hll, wrld!
aei = "AEIOUY"  # переменная с гласными
s = input("Введите строку латиницей: ")  # Запрос переменной у пользователя
i = 0  # счетчик i
while i < len(aei):  # запуск цикла, счетчик "i" меньше переменной "aei"
    s = s.replace(aei[i], "")  # поиск и замена гласных на пробел
    s = s.replace(aei[i].lower(), "")  # поиск и замена гласных с нижним регистром
    i += 1  # переход счетчика на следующую гласную
print("Результат:", s)  # вывод результата

# 2. Напишите программу, которая запрашивает у пользователя строку и определяет, содержит
# ли она только уникальные символы. Если все символы в строке уникальны, выведите
# соответствующее сообщение на экран. В противном случае выведите сообщение о том,
# какие символы повторяются. Не используйте множества и подобные структуры данных,
# которые мы пока не изучали, для проверки уникальности символов.
# Пример вывода:
# Введите строку: Python
# Все символы в строке уникальны.
# Введите строку: Hello
# Символы 'l' и 'o' повторяются.
s = input("Введите строку: ").lower()  # Запрос строки и перевод в нижний регистр
i = 0  # Счетчик i
while i < len(s):  # Счетчик i меньше длины строки
    # Проверка на уникальность символа
    if s[i+1:].find(s[i]) == -1:  # Если символ не найден в оставшейся части строки
        i += 1  # Счетчик переходит на следующий символ
    else:
        print("Символы не уникальны")  # Если символ найден, выводим сообщение
        break
else:
    print("Символы уникальны")  # Если цикл завершился без прерывания, символы уникальны

# 3. Напишите программу, которая запрашивает у пользователя строку и выравнивает ее по
# центру с заданной шириной. Если строка не может быть выровнена по центру из-за
# нечетной ширины, она должна быть выровнена смещением вправо. Используйте методы
# center() и rjust() для выравнивания строки.
# Пример вывода:
# Введите строку: Python
# Введите ширину: 10
# Результат:Python
s = input("Введите строку: ")  # Запрос строки
while True:   # Запрос ширины строки, пока введенное значение не станет больше длины строки
    d = int(input("Введите ширину (должно быть больше длины строки): "))
    if d > len(s):
        break  # Условие выхода из цикла, если ширина больше длины строки
    print(f"Ширина ({d}) должна быть больше длины строки ({len(s)}). Попробуйте еще раз.")
if len(s) % 2 == d % 2:  # Центрируем строку или выравниваем вправо
    s = s.center(d)
else:
    s = s.rjust(d)
print(s)  # Выводим окончательный результат