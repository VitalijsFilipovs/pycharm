#
# –ê–ù–ù–û–¢–ê–¶–ò–ò –¢–ò–ü–û–í
# –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
# –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.
# –û–Ω–∏ —Å–ª—É–∂–∞—Ç –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –∏ –ø–æ–º–æ–≥–∞—é—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º
# —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ç–∏–ø–æ–≤. –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞
# –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –∏ —è–≤–ª—è—é—Ç—Å—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏.
# –û—Ç–ª–∏—á–∏–µ –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏ —É–∫–∞–∑–∞–Ω–∏—è–º–∏ —Ç–∏–ø–æ–≤ –≤ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è—Ö –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –∏—Ö
# –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏. –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
# –æ–±—ä–µ–∫—Ç–æ–≤, —Ç–∞–∫–∏–µ –∫–∞–∫ —á–∏—Å–ª–æ, —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ —Å–ø–∏—Å–æ–∫, –∞ —É–∫–∞–∑–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –≤ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è—Ö
# –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö,
# –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.

# –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –≤ Python –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–≤–æ–µ—Ç–æ—á–∏—è –ø–æ—Å–ª–µ –∏–º–µ–Ω–∏
# –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–∏, –∞ –∑–∞—Ç–µ–º —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.
# x: int = 5

# –î–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–π –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤
# —Å–∏–≥–Ω–∞—Ç—É—Ä–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –∏–º–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∏–ª–∏ –ø–æ—Å–ª–µ —Å—Ç—Ä–µ–ª–∫–∏ (- >) –¥–ª—è
# –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.

# def add(a: int, b: int) -> int:
#     return a + b


# –ó–ê–î–ê–ù–ò–ï –î–õ–Ø –ó–ê–ö–†–ï–ü–õ–ï–ù–ò–Ø
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é word_multiply(). –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞:
# ‚óè –°—Ç—Ä–æ–∫—É
# ‚óè –ß–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Å—Ç—Ä–æ–∫—É
# text = 'python'
# print(word_multiply(text, 2)) # => pythonpython
# print(word_multiply(text, 0)) # =>
# –£–∫–∞–∂–∏—Ç–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏.



# –ú–û–î–£–õ–¨ TYPING
# –ú–æ–¥—É–ª—å typing - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π
# —Ç–∏–ø–æ–≤.
# –ù–∞–ø—Ä–∏–º–µ—Ä, Optional –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–∏–ø
# –∏–ª–∏ –±—ã—Ç—å —Ä–∞–≤–Ω–æ–π None. Union –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ –æ–¥–Ω—É
# –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é. Any —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ª—é–±–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö.

# from typing import Optional, Union, Any
# def greet(name: Optional[str]) -> Union[str, int]:
# if name is None:
# return "Hello, anonymous"
# else:
# return f"Hello, {name}"


# –ú–æ–¥—É–ª—å typing –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π. –ù–∞–ø—Ä–∏–º–µ—Ä,
# List –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–∞ —Å–ø–∏—Å–∫–∞, Tuple - –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–∞ –∫–æ—Ä—Ç–µ–∂–∞,
# Set - –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–∞, Dict - –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–∞ —Å–ª–æ–≤–∞—Ä—è.


# from typing import List, Tuple, Set, Dict, Union

# def process_data(data: List[str]) -> Tuple[int, Set[str]]:
# # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
# return len(data), set(data)
# def get_person_details(person: Dict[str, Union[str, int]]) -> str:
# # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ
# return f"{person['name']}, {person['age']} years old"



# –° –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è typing –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö
# –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é Iterable –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è —Ç–∏–ø–∞
# –¥–∞–Ω–Ω—ã—Ö, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º.

# from typing import Iterable
# def generate_numbers(n: int) -> Iterable[int]:
# for i in range(n):
# yield i


# –ó–ê–î–ê–ù–ò–ï –î–õ–Ø –ó–ê–ö–†–ï–ü–õ–ï–ù–ò–Ø
# –û–±—ä—è—Å–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —ç—Ç–æ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ –∫–æ–¥–∞:
# def broadcast_message(message: str, servers: List[str]) -> None:


# –ú–û–î–£–õ–¨ OPERATOR
# –ú–æ–¥—É–ª—å operator - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å
# –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –æ–±—ä–µ–∫—Ç–∞–º–∏ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤.
# –ú–æ–¥—É–ª—å operator –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ
# –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ —á–∏—Å–ª–∞–º–∏ –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏. –ù–∞–ø—Ä–∏–º–µ—Ä, —Ñ—É–Ω–∫—Ü–∏–∏ add, sub, mul, truediv
# –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, —É–º–Ω–æ–∂–µ–Ω–∏–µ –∏ –¥–µ–ª–µ–Ω–∏–µ —á–∏—Å–µ–ª. –§—É–Ω–∫—Ü–∏–∏
# concat, contains, itemgetter –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏, —Ç–∞–∫–∏–µ
# –∫–∞–∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ, –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞, –¥–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç—É.

#
# from operator import add, sub, mul, truediv
# result = add(5, 3) # –†–µ–∑—É–ª—å—Ç–∞—Ç: 8
# result = sub(10, 2) # –†–µ–∑—É–ª—å—Ç–∞—Ç: 8
# result = mul(2, 4) # –†–µ–∑—É–ª—å—Ç–∞—Ç: 8
# result = truediv(16, 2) # –†–µ–∑—É–ª—å—Ç–∞—Ç: 8.0


# –§—É–Ω–∫—Ü–∏—è itemgetter –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏–ª–∏
# –∞—Ç—Ä–∏–±—É—Ç—É –æ–±—ä–µ–∫—Ç–∞ –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏
# —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ.

# from operator import itemgetter
# data = [
# {'name': 'Alice', 'age': 25},
# {'name': 'Bob', 'age': 30},
# {'name': 'Charlie', 'age': 20}
# ]
# sorted_data = sorted(data, key=itemgetter('age'))



# –ó–ê–î–ê–ù–ò–ï –î–õ–Ø –ó–ê–ö–†–ï–ü–õ–ï–ù–ò–Ø
# –û–±—ä—è—Å–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —ç—Ç–æ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç–µ –∫–æ–¥–∞:
# import operator
# action = {
# "+": operator.add,
# "-": operator.sub,
# "/": operator.truediv,
# "*": operator.mul,
# "**": operator.pow
# }
# >>> action['-'](50, 25)
# # 25
# >>> action['+'](50, 25)
# # 75
# >>> action['/'](50, 25)
# # 2.0
# >>> action['*'](50, 25)
# # 1250



# –ú–û–î–£–õ–¨ BISECT
# –ë–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ - —ç—Ç–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤
# –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ.
# –ú–æ–¥—É–ª—å bisect –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞.
# –§—É–Ω–∫—Ü–∏—è bisect_left –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞–π–Ω—é—é –ª–µ–≤—É—é –ø–æ–∑–∏—Ü–∏—é, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ
# –≤—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞.
# –§—É–Ω–∫—Ü–∏—è bisect_right –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞–π–Ω—é—é –ø—Ä–∞–≤—É—é –ø–æ–∑–∏—Ü–∏—é, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ
# –≤—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ø–∏—Å–∫–∞

# from bisect import bisect_left, bisect_right
# data = [1, 3, 5, 7, 9]
# index = bisect_left(data, 6) # –†–µ–∑—É–ª—å—Ç–∞—Ç: 3 (–ø–æ–∑–∏—Ü–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å
# 6)
# index = bisect_right(data, 6) # –†–µ–∑—É–ª—å—Ç–∞—Ç: 3 (–ø–æ–∑–∏—Ü–∏—è, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –º–æ–∂–Ω–æ
# –≤—Å—Ç–∞–≤–∏—Ç—å 6)



# –ó–ê–î–ê–ù–ò–ï –î–õ–Ø –ó–ê–ö–†–ï–ü–õ–ï–ù–ò–Ø
# –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ, –∫–∞–∫–æ–µ —É—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å, –µ—Å–ª–∏ –µ–º—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
# —Å–ª–µ–¥—É—é—â–µ–µ —Ä–µ—à–µ–Ω–∏–µ?

# from bisect import bisect_left, bisect_right
# def grade(score, breakpoints=[60, 70, 80, 90], grades='FDCBA'):
# i = bisect_right(breakpoints, score)
# return grades[i]
# >>> [grade(score) for score in [33, 99, 77, 70, 89, 90, 100]]
# # ['F', 'A', 'C', 'C', 'B', 'A', 'A']


# –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ê–Ø –†–ê–ë–û–¢–ê
# 1. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
# –Ω–∞–∏–±–æ–ª—å—à—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–∞ —Å
# –ø–æ–º–æ—â—å—é –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π —Ç–∏–ø–æ–≤.
# 2. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π –∏ –∫–ª—é—á, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É
# –Ω—É–∂–Ω–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–∞ —Å
# –ø–æ–º–æ—â—å—é –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π —Ç–∏–ø–æ–≤.
# 3. –†–µ—à–∞–µ–º –∑–∞–¥–∞—á—É "–ø—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ" –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
# –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏ —Å—Ä–∞–≤–Ω–∏–º–æ–≥–æ —Å –º–∞—Å—Å–∏–≤–æ–º –æ–±—ä—ë–º–∞ —Å –ø–æ–º–æ—â—å—é
# –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞.
# –ü–û–õ–ï–ó–ù–´–ï –ú–ê–¢–ï–†–ò–ê–õ–´
# 1. üêç –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ –≤ Python: –≤—Å–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –∑–∞ 5 –º–∏–Ω—É—Ç
# 2. –ú–æ–¥—É–ª—å bisect - —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞